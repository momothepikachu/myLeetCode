/**

Merge two sorted linked lists and return it as a new list. The new list should be made by splicing together the nodes of the first two lists.

Example:

Input: 1->2->4, 1->3->4
Output: 1->1->2->3->4->4

 * Definition for singly-linked list.
 * function ListNode(val) {
 *     this.val = val;
 *     this.next = null;
 * }
 */
/**
 * @param {ListNode} l1
 * @param {ListNode} l2
 * @return {ListNode}
 */
var mergeTwoLists = function(l1, l2) {
    // create ListNode
    var result = new ListNode(0);
    // c represents the current node
    var c = result;

    while(l1 !== null && l2 !==null){
        // add the smaller val between l1 or l2 to result
        if(l1.val > l2.val){
            c.next = l2;
            l2 = l2.next;
        } else {
            c.next = l1;
            l1 = l1.next
        }
        c = c.next;
    }
    // add last val
    if (l1!=null) {
        c.next = l1;
    }
    if (l2!=null) {
        c.next = l2;
    }
    return result.next;
};
