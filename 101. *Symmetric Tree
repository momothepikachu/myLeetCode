/**

Given a binary tree, check whether it is a mirror of itself (ie, symmetric around its center).

For example, this binary tree [1,2,2,3,4,4,3] is symmetric:

    1
   / \
  2   2
 / \ / \
3  4 4  3
But the following [1,2,2,null,3,null,3] is not:
    1
   / \
  2   2
   \   \
   3    3

 * Definition for a binary tree node.
 * function TreeNode(val) {
 *     this.val = val;
 *     this.left = this.right = null;
 * }
 */
/**
 * @param {TreeNode} root
 * @return {boolean}
 */

let isSymmetric = function(root) {
    function isSame(left, right) {
        if (!left && !right) {
            return true;
        } else if (!left || !right || left.val != right.val) {
            return false;
        } else {
            return isSame(left.left, right.right) && isSame(left.right, right.left)
        }
    }
    if (root == null) {return true;}
    return isSame(root.left, root.right);
};
